
BEGIN_DEFINES
   #pragma shader_feature_local_fragment _ _LOD_FADE_CROSSFADE
END_DEFINES

BEGIN_PROPERTIES
    [Toggle(_LOD_FADE_CROSSFADE)]_LodFadeCrossfade("LOD Crossfade", Float) = 0
END_PROPERTIES

BEGIN_CBUFFER

END_CBUFFER


BEGIN_CODE

    float Dither8x8Bayer( int x, int y )
    {
        const float dither[ 64 ] = {
                1, 49, 13, 61,  4, 52, 16, 64,
            33, 17, 45, 29, 36, 20, 48, 32,
                9, 57,  5, 53, 12, 60,  8, 56,
            41, 25, 37, 21, 44, 28, 40, 24,
                3, 51, 15, 63,  2, 50, 14, 62,
            35, 19, 47, 31, 34, 18, 46, 30,
            11, 59,  7, 55, 10, 58,  6, 54,
            43, 27, 39, 23, 42, 26, 38, 22};
        int r = y * 8 + x;
        return dither[r] / 64; 
    }

    #if defined(_LOD_FADE_CROSSFADE)
    

    void ApplyDitherCrossFade(float2 vpos, float fadeValue)
    {
        float dither = Dither8x8Bayer( fmod(vpos.x, 8), fmod(vpos.y, 8) );
        if (fadeValue > 0)
            clip(dither - (1 - fadeValue));
        else
            clip((1-dither) + fadeValue);
    
    }
    #endif

	void SurfaceFunction(inout Surface o, ShaderData d)
	{
        // in HDRP, something is different and this causes stipping, so we skip it unless it's the forward or gbuffer passes
		#if _LOD_FADE_CROSSFADE
            #if !_HDRP || (_HDRP && (_PASSGBUFFER || _PASSFORWARD))
                float4 screenPosNorm = d.screenPos / d.screenPos.w;
                screenPosNorm.z = ( UNITY_NEAR_CLIP_VALUE >= 0 ) ? screenPosNorm.z : screenPosNorm.z * 0.5 + 0.5;
                float2 clipScreen = screenPosNorm.xy * _ScreenParams.xy;
                ApplyDitherCrossFade(clipScreen, unity_LODFade.x);
            #endif
        #endif
	}

END_CODE


